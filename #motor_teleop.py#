#!/home/pi/Desktop/Gaze/bin/python3

# Import the necessary libraries
import rospy # Python library for ROS
import motor
from capstone.msg import steering # Image is the message type
#from cv_bridge import CvBridge # Package to convert between ROS and OpenCV Images
#import cv2 # OpenCV library


oginfo("Receiving steering instructions and running motor")
  rospy.loginfo("\nAction:\t"+data.action+"\nDirection:\t"+data.direction)
  action=data.action
  direction=data.direction
  
r
      elif direction == 'right':
          m.turn_right()
          #                 turn on right motor
      else:
        m.move_forward()
        #                 turn on both motors
  else:
    m.stop()
  
  
  # Convert ROS Image message to OpenCV image
#  current_frame = br.imgmsg_to_cv2(data.frame)
  # Display image
#  cv2.imshow("camera", current_frame)
#  cv2.waitKey(1)

def receive_message():

  # Tells rospy the name of the node.
  # Anonymous = True makes sure the node has a unique name. Random
  # numbers are added to the end of the name.
  rospy.init_node('motor_teleop_py', anonymous=True)

  # Node is subscribing to the video_frames topic
  rospy.Subscriber('video_frames', steering, callback)

  # spin() simply keeps python from exiting until this node is stopped
  rospy.spin()

  # Close down the video stream when done
#  cv2.destroyAllWindows()


if __name__ == '__main__':
    m=motor.Motors(13,12,23,22,17,27,50)
    receive_message()